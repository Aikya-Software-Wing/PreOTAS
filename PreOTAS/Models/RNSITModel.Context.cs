//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PreOTAS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RNSITEntities : DbContext
    {
        public RNSITEntities()
            : base("name=RNSITEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<ABCD> ABCDs { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<DEPT> DEPTs { get; set; }
        public virtual DbSet<NEW_RID_TABLE> NEW_RID_TABLE { get; set; }
        public virtual DbSet<NewElectivesTable> NewElectivesTables { get; set; }
        public virtual DbSet<STUDENT> STUDENTs { get; set; }
        public virtual DbSet<SubComb> SubCombs { get; set; }
        public virtual DbSet<Subject> Subjects { get; set; }
        public virtual DbSet<Suggestion> Suggestions { get; set; }
        public virtual DbSet<Teacher> Teachers { get; set; }
        public virtual DbSet<Valid> ValidS { get; set; }
        public virtual DbSet<GivenNotGiven> GivenNotGivens { get; set; }
        public virtual DbSet<LowerTable> LowerTables { get; set; }
    
        public virtual int A1(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A1", ridParameter);
        }
    
        public virtual int A10(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A10", ridParameter);
        }
    
        public virtual int A2(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A2", ridParameter);
        }
    
        public virtual int A3(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A3", ridParameter);
        }
    
        public virtual int A4(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A4", ridParameter);
        }
    
        public virtual int A5(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A5", ridParameter);
        }
    
        public virtual int A6(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A6", ridParameter);
        }
    
        public virtual int A7(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A7", ridParameter);
        }
    
        public virtual int A8(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A8", ridParameter);
        }
    
        public virtual int A9(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("A9", ridParameter);
        }
    
        public virtual int calc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("calc");
        }
    
        public virtual ObjectResult<string> department(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("department", deptParameter);
        }
    
        public virtual ObjectResult<GetLowerTableByRID_Result> GetLowerTableByRID(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLowerTableByRID_Result>("GetLowerTableByRID", ridParameter);
        }
    
        public virtual int getScores(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("getScores", ridParameter);
        }
    
        public virtual ObjectResult<GetTeacherDetailsByUSN_Result> GetTeacherDetailsByUSN(string usn)
        {
            var usnParameter = usn != null ?
                new ObjectParameter("usn", usn) :
                new ObjectParameter("usn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTeacherDetailsByUSN_Result>("GetTeacherDetailsByUSN", usnParameter);
        }
    
        public virtual int NewInsertCommand(string rID, Nullable<decimal> a1, Nullable<decimal> a2, Nullable<decimal> a3, Nullable<decimal> a4, Nullable<decimal> a5, Nullable<decimal> a6, Nullable<decimal> a7, Nullable<decimal> a8, Nullable<decimal> a9, Nullable<decimal> a10)
        {
            var rIDParameter = rID != null ?
                new ObjectParameter("RID", rID) :
                new ObjectParameter("RID", typeof(string));
    
            var a1Parameter = a1.HasValue ?
                new ObjectParameter("A1", a1) :
                new ObjectParameter("A1", typeof(decimal));
    
            var a2Parameter = a2.HasValue ?
                new ObjectParameter("A2", a2) :
                new ObjectParameter("A2", typeof(decimal));
    
            var a3Parameter = a3.HasValue ?
                new ObjectParameter("A3", a3) :
                new ObjectParameter("A3", typeof(decimal));
    
            var a4Parameter = a4.HasValue ?
                new ObjectParameter("A4", a4) :
                new ObjectParameter("A4", typeof(decimal));
    
            var a5Parameter = a5.HasValue ?
                new ObjectParameter("A5", a5) :
                new ObjectParameter("A5", typeof(decimal));
    
            var a6Parameter = a6.HasValue ?
                new ObjectParameter("A6", a6) :
                new ObjectParameter("A6", typeof(decimal));
    
            var a7Parameter = a7.HasValue ?
                new ObjectParameter("A7", a7) :
                new ObjectParameter("A7", typeof(decimal));
    
            var a8Parameter = a8.HasValue ?
                new ObjectParameter("A8", a8) :
                new ObjectParameter("A8", typeof(decimal));
    
            var a9Parameter = a9.HasValue ?
                new ObjectParameter("A9", a9) :
                new ObjectParameter("A9", typeof(decimal));
    
            var a10Parameter = a10.HasValue ?
                new ObjectParameter("A10", a10) :
                new ObjectParameter("A10", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewInsertCommand", rIDParameter, a1Parameter, a2Parameter, a3Parameter, a4Parameter, a5Parameter, a6Parameter, a7Parameter, a8Parameter, a9Parameter, a10Parameter);
        }
    
        public virtual int NewSelectCommand()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("NewSelectCommand");
        }
    
        public virtual int passgen()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("passgen");
        }
    
        public virtual int rating4c(string rid)
        {
            var ridParameter = rid != null ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("rating4c", ridParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spAddElectiveForStudent(string uSN, string subcode)
        {
            var uSNParameter = uSN != null ?
                new ObjectParameter("USN", uSN) :
                new ObjectParameter("USN", typeof(string));
    
            var subcodeParameter = subcode != null ?
                new ObjectParameter("subcode", subcode) :
                new ObjectParameter("subcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddElectiveForStudent", uSNParameter, subcodeParameter);
        }
    
        public virtual int spAddElectivesForClass(string deptId, Nullable<int> sem, string section, string subCode)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(string));
    
            var semParameter = sem.HasValue ?
                new ObjectParameter("sem", sem) :
                new ObjectParameter("sem", typeof(int));
    
            var sectionParameter = section != null ?
                new ObjectParameter("section", section) :
                new ObjectParameter("section", typeof(string));
    
            var subCodeParameter = subCode != null ?
                new ObjectParameter("SubCode", subCode) :
                new ObjectParameter("SubCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddElectivesForClass", deptIdParameter, semParameter, sectionParameter, subCodeParameter);
        }
    
        public virtual int spAddElectivesForSemester(string deptId, Nullable<int> sem, string subCode)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(string));
    
            var semParameter = sem.HasValue ?
                new ObjectParameter("sem", sem) :
                new ObjectParameter("sem", typeof(int));
    
            var subCodeParameter = subCode != null ?
                new ObjectParameter("SubCode", subCode) :
                new ObjectParameter("SubCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spAddElectivesForSemester", deptIdParameter, semParameter, subCodeParameter);
        }
    
        public virtual int spDeleteElectivesForParticularStudent(string uSN, string subcode)
        {
            var uSNParameter = uSN != null ?
                new ObjectParameter("USN", uSN) :
                new ObjectParameter("USN", typeof(string));
    
            var subcodeParameter = subcode != null ?
                new ObjectParameter("subcode", subcode) :
                new ObjectParameter("subcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDeleteElectivesForParticularStudent", uSNParameter, subcodeParameter);
        }
    
        public virtual ObjectResult<spGetAll_Result> spGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetAll_Result>("spGetAll");
        }
    
        public virtual ObjectResult<spGetDepartments_Result> spGetDepartments()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetDepartments_Result>("spGetDepartments");
        }
    
        public virtual ObjectResult<string> spGetElectivesForParticularStudent(string uSN)
        {
            var uSNParameter = uSN != null ?
                new ObjectParameter("USN", uSN) :
                new ObjectParameter("USN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetElectivesForParticularStudent", uSNParameter);
        }
    
        public virtual ObjectResult<spGetElectivesForStudent_Result> spGetElectivesForStudent(string usn)
        {
            var usnParameter = usn != null ?
                new ObjectParameter("usn", usn) :
                new ObjectParameter("usn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetElectivesForStudent_Result>("spGetElectivesForStudent", usnParameter);
        }
    
        public virtual ObjectResult<spGetGivenByDeptartment_Result> spGetGivenByDeptartment(string dept)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGivenByDeptartment_Result>("spGetGivenByDeptartment", deptParameter);
        }
    
        public virtual int spGetGivenNotGiven()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetGivenNotGiven");
        }
    
        public virtual ObjectResult<spGetGivenNotGivenDataForCollege_Result> spGetGivenNotGivenDataForCollege()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGivenNotGivenDataForCollege_Result>("spGetGivenNotGivenDataForCollege");
        }
    
        public virtual ObjectResult<spGetGivenNotGivenDepartmentwise_Result> spGetGivenNotGivenDepartmentwise()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetGivenNotGivenDepartmentwise_Result>("spGetGivenNotGivenDepartmentwise");
        }
    
        public virtual ObjectResult<spGetPasswordsForClass_Result> spGetPasswordsForClass(string deptId, Nullable<int> sem, string sec)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(string));
    
            var semParameter = sem.HasValue ?
                new ObjectParameter("sem", sem) :
                new ObjectParameter("sem", typeof(int));
    
            var secParameter = sec != null ?
                new ObjectParameter("sec", sec) :
                new ObjectParameter("sec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPasswordsForClass_Result>("spGetPasswordsForClass", deptIdParameter, semParameter, secParameter);
        }
    
        public virtual ObjectResult<spGetPrincipalView_Result> spGetPrincipalView(string dept, string sem, string sec)
        {
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var semParameter = sem != null ?
                new ObjectParameter("sem", sem) :
                new ObjectParameter("sem", typeof(string));
    
            var secParameter = sec != null ?
                new ObjectParameter("sec", sec) :
                new ObjectParameter("sec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetPrincipalView_Result>("spGetPrincipalView", deptParameter, semParameter, secParameter);
        }
    
        public virtual int spGetResultshv()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetResultshv");
        }
    
        public virtual ObjectResult<spGetSection_Result> spGetSection(string deptId, Nullable<int> sem)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(string));
    
            var semParameter = sem.HasValue ?
                new ObjectParameter("Sem", sem) :
                new ObjectParameter("Sem", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSection_Result>("spGetSection", deptIdParameter, semParameter);
        }
    
        public virtual ObjectResult<spGetSem_Result> spGetSem(string deptId)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("DeptId", deptId) :
                new ObjectParameter("DeptId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSem_Result>("spGetSem", deptIdParameter);
        }
    
        public virtual ObjectResult<spGetSemesterWiseGivenNotGiven_Result> spGetSemesterWiseGivenNotGiven()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSemesterWiseGivenNotGiven_Result>("spGetSemesterWiseGivenNotGiven");
        }
    
        public virtual ObjectResult<spGetStudentDetails_Result> spGetStudentDetails(string usn)
        {
            var usnParameter = usn != null ?
                new ObjectParameter("usn", usn) :
                new ObjectParameter("usn", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStudentDetails_Result>("spGetStudentDetails", usnParameter);
        }
    
        public virtual ObjectResult<spGetStudentsInClass_Result> spGetStudentsInClass(string deptId, Nullable<int> sem, string sec)
        {
            var deptIdParameter = deptId != null ?
                new ObjectParameter("deptId", deptId) :
                new ObjectParameter("deptId", typeof(string));
    
            var semParameter = sem.HasValue ?
                new ObjectParameter("sem", sem) :
                new ObjectParameter("sem", typeof(int));
    
            var secParameter = sec != null ?
                new ObjectParameter("sec", sec) :
                new ObjectParameter("sec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetStudentsInClass_Result>("spGetStudentsInClass", deptIdParameter, semParameter, secParameter);
        }
    
        public virtual ObjectResult<spGetSuggestions_Result> spGetSuggestions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSuggestions_Result>("spGetSuggestions");
        }
    
        public virtual int spGetTeacherFeedback()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spGetTeacherFeedback");
        }
    
        public virtual ObjectResult<spGetTeachersConsolidatedReports_Result> spGetTeachersConsolidatedReports()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTeachersConsolidatedReports_Result>("spGetTeachersConsolidatedReports");
        }
    
        public virtual ObjectResult<spGetTeachersMultipleSubjectReport_Result> spGetTeachersMultipleSubjectReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetTeachersMultipleSubjectReport_Result>("spGetTeachersMultipleSubjectReport");
        }
    
        public virtual ObjectResult<spGetUpperTable_Result> spGetUpperTable(string combid)
        {
            var combidParameter = combid != null ?
                new ObjectParameter("combid", combid) :
                new ObjectParameter("combid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetUpperTable_Result>("spGetUpperTable", combidParameter);
        }
    
        public virtual ObjectResult<spInsertInNewElectives_Result> spInsertInNewElectives(string usn, string subcode)
        {
            var usnParameter = usn != null ?
                new ObjectParameter("usn", usn) :
                new ObjectParameter("usn", typeof(string));
    
            var subcodeParameter = subcode != null ?
                new ObjectParameter("Subcode", subcode) :
                new ObjectParameter("Subcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spInsertInNewElectives_Result>("spInsertInNewElectives", usnParameter, subcodeParameter);
        }
    
        public virtual int spInsertIntoABCD(string tid, string s1, string s2, string s3, string s4, string s5, string s6, string s7)
        {
            var tidParameter = tid != null ?
                new ObjectParameter("tid", tid) :
                new ObjectParameter("tid", typeof(string));
    
            var s1Parameter = s1 != null ?
                new ObjectParameter("S1", s1) :
                new ObjectParameter("S1", typeof(string));
    
            var s2Parameter = s2 != null ?
                new ObjectParameter("S2", s2) :
                new ObjectParameter("S2", typeof(string));
    
            var s3Parameter = s3 != null ?
                new ObjectParameter("S3", s3) :
                new ObjectParameter("S3", typeof(string));
    
            var s4Parameter = s4 != null ?
                new ObjectParameter("S4", s4) :
                new ObjectParameter("S4", typeof(string));
    
            var s5Parameter = s5 != null ?
                new ObjectParameter("S5", s5) :
                new ObjectParameter("S5", typeof(string));
    
            var s6Parameter = s6 != null ?
                new ObjectParameter("S6", s6) :
                new ObjectParameter("S6", typeof(string));
    
            var s7Parameter = s7 != null ?
                new ObjectParameter("S7", s7) :
                new ObjectParameter("S7", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spInsertIntoABCD", tidParameter, s1Parameter, s2Parameter, s3Parameter, s4Parameter, s5Parameter, s6Parameter, s7Parameter);
        }
    
        public virtual ObjectResult<UsersLogin_Result> UsersLogin(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsersLogin_Result>("UsersLogin", userIdParameter);
        }
    }
}
